[{"path":"https://furlan-lab.github.io/viewmastR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Scott N Furlan Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://furlan-lab.github.io/viewmastR/articles/Augment.html","id":"installing-rust","dir":"Articles","previous_headings":"","what":"Installing Rust","title":"How to augment data using viewmastR","text":"First need updated Rust installation. Go site learn install Rust.","code":""},{"path":"https://furlan-lab.github.io/viewmastR/articles/Augment.html","id":"installing-viewmastr","dir":"Articles","previous_headings":"","what":"Installing viewmastR","title":"How to augment data using viewmastR","text":"need devtools package installed…","code":"devtools::install_github(\"furlan-lab/viewmastR\")"},{"path":"https://furlan-lab.github.io/viewmastR/articles/Augment.html","id":"load-a-dataset","dir":"Articles","previous_headings":"","what":"Load a dataset","title":"How to augment data using viewmastR","text":"","code":"suppressPackageStartupMessages({ library(viewmastR) library(Seurat) library(ggplot2) library(scCustomize) library(magrittr) })  if(grepl(\"^gizmo\", Sys.info()[\"nodename\"])){   ROOT_DIR1<-\"/fh/fast/furlan_s/experiments/MB_10X_5p/cds\"   ROOT_DIR2<-\"/fh/fast/furlan_s/grp/data/ddata/BM_data\" } else {   ROOT_DIR1<-\"/Users/sfurlan/Library/CloudStorage/OneDrive-SharedLibraries-FredHutchinsonCancerCenter/Furlan_Lab - General/experiments/MB_10X_5p/cds\"   ROOT_DIR2<-\"/Users/sfurlan/Library/CloudStorage/OneDrive-SharedLibraries-FredHutchinsonCancerCenter/Furlan_Lab - General/datasets/Healthy_BM_greenleaf\" }  #query dataset seu<-readRDS(file.path(ROOT_DIR1, \"220302_final_object.RDS\"))"},{"path":"https://furlan-lab.github.io/viewmastR/articles/Augment.html","id":"lets-first-fix-this-dataset-and-label-with-tregs","dir":"Articles","previous_headings":"","what":"Let’s first fix this dataset and label with Tregs","title":"How to augment data using viewmastR","text":"Tregs located cluster 9 (evidenced FOXP3 expression), don’t correct label. Let’s fix .       Better…","code":"DimPlot_scCustom(seu, group.by = \"celltype\") Idents(seu)<-seu$celltype Cluster_Highlight_Plot(seu, cluster_name = \"Treg\") DimPlot_scCustom(seu, group.by = \"seurat_clusters\") FeaturePlot_scCustom(seu, features = \"FOXP3\") seu$celltype[seu$seurat_clusters %in% \"9\"]<-\"Treg\" DimPlot_scCustom(seu, group.by = \"celltype\") Idents(seu)<-seu$celltype Cluster_Highlight_Plot(seu, cluster_name = \"Treg\") table(seu$celltype) ##  ##    B Memory     B Naive   Basophils   CD14 Mono   CD16 Mono  CD4 Memory  ##         199         666           9        3626         722        2115  ##   CD4 Naive  CD8 Memory   CD8 Naive         cDC Neutrophils          NK  ##        1142        1209         388         127           9         843  ##         pDC        Treg  ##           3         250"},{"path":"https://furlan-lab.github.io/viewmastR/articles/Augment.html","id":"lets-augment-rare-celltypes-for-better-learning-but-bringing-any-celltype-to-a-minimum-of-1500-cells--use-the-prune-option-to-downsample-any-celltypes-present-above-the-norm_number-down-to-that-number-","dir":"Articles","previous_headings":"","what":"Let’s augment rare celltypes for better learning but bringing any celltype to a minimum of 1500 cells. use the prune option to downsample any celltypes present above the norm_number down to that number.","title":"How to augment data using viewmastR","text":"","code":"seuA<-augment_data(seu, \"celltype\", norm_number = 500, prune = T) seuA <- FindVariableFeatures(seuA, selection.method = \"vst\", nfeatures = 3000) %>% NormalizeData() %>% ScaleData() seuA <- RunPCA(seuA, features = VariableFeatures(object = seuA), npcs = 50) ElbowPlot(seuA, 50) seuA<- FindNeighbors(seuA, dims = 1:40) %>% FindClusters(resolution = 2) %>% RunUMAP(dims = 1:40, n.components = 2) ## Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck ##  ## Number of nodes: 7000 ## Number of edges: 360790 ##  ## Running Louvain algorithm... ## Maximum modularity in 10 random starts: 0.8521 ## Number of communities: 19 ## Elapsed time: 0 seconds DimPlot_scCustom(seuA, group.by = \"celltype\") FeaturePlot_scCustom(seuA, features = \"FOXP3\")"},{"path":"https://furlan-lab.github.io/viewmastR/articles/Augment.html","id":"now-we-train-another-pbmc-dataset-with-labels-for-tregs-that-are-questionable-and-see-if-we-can-find-them","dir":"Articles","previous_headings":"","what":"Now we train another PBMC dataset with labels for tregs that are questionable and see if we can find them","title":"How to augment data using viewmastR","text":"","code":"if(grepl(\"^gizmo\", Sys.info()[\"nodename\"])){   ROOT_DIR3<-\"/fh/fast/furlan_s/experiments/LRPBMC/cds\" } else {   ROOT_DIR3<-\"/Users/sfurlan/Library/CloudStorage/OneDrive-SharedLibraries-FredHutchinsonCancerCenter/Furlan_Lab - General/experiments/LRPBMC/cds\" }  cds<-readRDS(file.path(ROOT_DIR3, \"210330_5p_cds.RDS\")) rownames(cds)<-SingleCellExperiment::rowData(cds)$gene_short_name seu<-monocle3_to_seurat(cds)   seu<-calculate_gene_dispersion(seu) seu<-select_genes(seu, top_n = 10000, logmean_ul = -1, logmean_ll = -8) vgq<-get_selected_genes(seu)  seuA<-calculate_gene_dispersion(seuA) seuA<-select_genes(seuA, top_n = 10000, logmean_ul = -1, logmean_ll = -8) vgr<-get_selected_genes(seuA)  vg<-intersect(vgq, vgr)  seu<-viewmastR(seu, seuA, ref_celldata_col = \"celltype\", selected_genes = vg)  DimPlot_scCustom(seu, group.by = \"mCelltype\") #need to fix spelling error #seu$mCelltype[seu$mCelltype==\"Jeutrophils\"]<-\"Neutrophils\" DimPlot_scCustom(seu, group.by = \"viewmastR_smr\")"},{"path":"https://furlan-lab.github.io/viewmastR/articles/Augment.html","id":"a-confusion-matrix-showing-prediction-vs-ground-truth","dir":"Articles","previous_headings":"","what":"A confusion matrix showing prediction vs ground truth","title":"How to augment data using viewmastR","text":"","code":"co<-as.character(pals::polychrome(length(levels(factor(c(seu$mCelltype, seu$viewmastR_smr)))))) names(co)<-levels(factor(c(seu$mCelltype, seu$viewmastR_smr))) confusion_matrix(pred = factor(seu$viewmastR_smr), gt = factor(seu$mCelltype), cols = co) Idents(seu)<-seu$viewmastR_smr VlnPlot_scCustom(seu, features = \"FOXP3\") Idents(seu)<-seu$mCelltype VlnPlot_scCustom(seu, features = \"FOXP3\")"},{"path":"https://furlan-lab.github.io/viewmastR/articles/Augment.html","id":"appendix","dir":"Articles","previous_headings":"","what":"Appendix","title":"How to augment data using viewmastR","text":"","code":"sessionInfo() ## R version 4.3.1 (2023-06-16) ## Platform: aarch64-apple-darwin20 (64-bit) ## Running under: macOS Ventura 13.5.2 ##  ## Matrix products: default ## BLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib  ## LAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0 ##  ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ##  ## time zone: America/Los_Angeles ## tzcode source: internal ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] magrittr_2.0.3     scCustomize_2.0.1  ggplot2_3.4.4      Seurat_5.0.1       ## [5] SeuratObject_5.0.1 sp_2.1-2           viewmastR_0.2.0    ##  ## loaded via a namespace (and not attached): ##   [1] fs_1.6.3                    matrixStats_1.1.0           ##   [3] spatstat.sparse_3.0-3       bitops_1.0-7                ##   [5] RcppMsgPack_0.2.3           lubridate_1.9.3             ##   [7] httr_1.4.7                  RColorBrewer_1.1-3          ##   [9] doParallel_1.0.17           tools_4.3.1                 ##  [11] sctransform_0.4.1           backports_1.4.1             ##  [13] utf8_1.2.4                  R6_2.5.1                    ##  [15] lazyeval_0.2.2              uwot_0.1.16                 ##  [17] GetoptLong_1.0.5            withr_2.5.2                 ##  [19] gridExtra_2.3               progressr_0.14.0            ##  [21] cli_3.6.1                   Biobase_2.60.0              ##  [23] textshaping_0.3.7           Cairo_1.6-2                 ##  [25] spatstat.explore_3.2-5      fastDummies_1.7.3           ##  [27] labeling_0.4.3              prismatic_1.1.1             ##  [29] sass_0.4.8                  spatstat.data_3.0-3         ##  [31] proxy_0.4-27                ggridges_0.5.4              ##  [33] pbapply_1.7-2               pkgdown_2.0.7               ##  [35] systemfonts_1.0.5           foreign_0.8-86              ##  [37] dichromat_2.0-0.1           parallelly_1.36.0           ##  [39] maps_3.4.1.1                pals_1.8                    ##  [41] rstudioapi_0.15.0           generics_0.1.3              ##  [43] shape_1.4.6                 ica_1.0-3                   ##  [45] spatstat.random_3.2-2       dplyr_1.1.4                 ##  [47] Matrix_1.6-4                ggbeeswarm_0.7.2            ##  [49] fansi_1.0.6                 S4Vectors_0.38.2            ##  [51] abind_1.4-5                 terra_1.7-55                ##  [53] lifecycle_1.0.4             yaml_2.3.7                  ##  [55] snakecase_0.11.1            SummarizedExperiment_1.30.2 ##  [57] recipes_1.0.8               Rtsne_0.17                  ##  [59] paletteer_1.5.0             grid_4.3.1                  ##  [61] promises_1.2.1              crayon_1.5.2                ##  [63] miniUI_0.1.1.1              lattice_0.22-5              ##  [65] cowplot_1.1.1               mapproj_1.2.11              ##  [67] pillar_1.9.0                knitr_1.45                  ##  [69] ComplexHeatmap_2.16.0       GenomicRanges_1.52.1        ##  [71] rjson_0.2.21                boot_1.3-28.1               ##  [73] future.apply_1.11.0         codetools_0.2-19            ##  [75] leiden_0.4.3.1              glue_1.6.2                  ##  [77] MatrixExtra_0.1.14          data.table_1.14.10          ##  [79] float_0.3-1                 vctrs_0.6.5                 ##  [81] png_0.1-8                   spam_2.10-0                 ##  [83] gtable_0.3.4                rematch2_2.1.2              ##  [85] assertthat_0.2.1            cachem_1.0.8                ##  [87] gower_1.0.1                 xfun_0.41                   ##  [89] S4Arrays_1.0.6              mime_0.12                   ##  [91] prodlim_2023.08.28          survival_3.5-7              ##  [93] timeDate_4022.108           SingleCellExperiment_1.22.0 ##  [95] iterators_1.0.14            pbmcapply_1.5.1             ##  [97] hardhat_1.3.0               lava_1.7.3                  ##  [99] ellipsis_0.3.2              fitdistrplus_1.1-11         ## [101] ROCR_1.0-11                 ipred_0.9-14                ## [103] nlme_3.1-164                RcppAnnoy_0.0.21            ## [105] GenomeInfoDb_1.36.4         rprojroot_2.0.4             ## [107] bslib_0.6.1                 irlba_2.3.5.1               ## [109] vipor_0.4.5                 KernSmooth_2.23-22          ## [111] rpart_4.1.23                colorspace_2.1-0            ## [113] BiocGenerics_0.46.0         Hmisc_5.1-1                 ## [115] nnet_7.3-19                 ggrastr_1.0.2               ## [117] tidyselect_1.2.0            compiler_4.3.1              ## [119] htmlTable_2.4.2             desc_1.4.2                  ## [121] DelayedArray_0.26.7         plotly_4.10.3               ## [123] checkmate_2.3.1             scales_1.3.0                ## [125] lmtest_0.9-40               stringr_1.5.1               ## [127] digest_0.6.33               goftest_1.2-3               ## [129] spatstat.utils_3.0-4        minqa_1.2.6                 ## [131] rmarkdown_2.25              XVector_0.40.0              ## [133] RhpcBLASctl_0.23-42         htmltools_0.5.7             ## [135] pkgconfig_2.0.3             base64enc_0.1-3             ## [137] lme4_1.1-35.1               sparseMatrixStats_1.12.2    ## [139] MatrixGenerics_1.12.3       highr_0.10                  ## [141] fastmap_1.1.1               rlang_1.1.2                 ## [143] GlobalOptions_0.1.2         htmlwidgets_1.6.4           ## [145] shiny_1.8.0                 DelayedMatrixStats_1.22.6   ## [147] farver_2.1.1                jquerylib_0.1.4             ## [149] zoo_1.8-12                  jsonlite_1.8.8              ## [151] ModelMetrics_1.2.2.2        RCurl_1.98-1.13             ## [153] Formula_1.2-5               GenomeInfoDbData_1.2.10     ## [155] dotCall64_1.1-1             patchwork_1.1.3             ## [157] munsell_0.5.0               Rcpp_1.0.11                 ## [159] reticulate_1.34.0           stringi_1.8.2               ## [161] pROC_1.18.5                 zlibbioc_1.46.0             ## [163] MASS_7.3-60                 plyr_1.8.9                  ## [165] parallel_4.3.1              listenv_0.9.0               ## [167] ggrepel_0.9.4               forcats_1.0.0               ## [169] deldir_2.0-2                splines_4.3.1               ## [171] tensor_1.5                  circlize_0.4.15             ## [173] igraph_1.5.1                spatstat.geom_3.2-7         ## [175] RcppHNSW_0.5.0              reshape2_1.4.4              ## [177] stats4_4.3.1                evaluate_0.23               ## [179] ggprism_1.0.4               nloptr_2.0.3                ## [181] foreach_1.5.2               httpuv_1.6.13               ## [183] RANN_2.6.1                  tidyr_1.3.0                 ## [185] purrr_1.0.2                 polyclip_1.10-6             ## [187] future_1.33.0               clue_0.3-65                 ## [189] scattermore_1.2             janitor_2.2.0               ## [191] xtable_1.8-4                monocle3_1.3.4              ## [193] e1071_1.7-14                RSpectra_0.16-1             ## [195] later_1.3.2                 viridisLite_0.4.2           ## [197] class_7.3-22                ragg_1.2.6                  ## [199] tibble_3.2.1                memoise_2.0.1               ## [201] beeswarm_0.4.0              IRanges_2.34.1              ## [203] cluster_2.1.6               timechange_0.2.0            ## [205] globals_0.16.2              caret_6.0-94 getwd() ## [1] \"/Users/sfurlan/develop/viewmastR/vignettes\""},{"path":"https://furlan-lab.github.io/viewmastR/articles/BulkReference.html","id":"installing-rust","dir":"Articles","previous_headings":"","what":"Installing Rust","title":"How to use a bulk dataset as a reference for viewmastR","text":"First need updated Rust installation. Go site learn install Rust.","code":""},{"path":"https://furlan-lab.github.io/viewmastR/articles/BulkReference.html","id":"installing-viewmastr","dir":"Articles","previous_headings":"","what":"Installing viewmastR","title":"How to use a bulk dataset as a reference for viewmastR","text":"need devtools package installed…","code":"devtools::install_github(\"furlan-lab/viewmastR\")"},{"path":"https://furlan-lab.github.io/viewmastR/articles/BulkReference.html","id":"load-a-few-datasets","dir":"Articles","previous_headings":"","what":"Load a few datasets","title":"How to use a bulk dataset as a reference for viewmastR","text":"","code":"suppressPackageStartupMessages({ library(viewmastR) library(Seurat)   library(SeuratObject) library(ggplot2) library(scCustomize) library(magrittr) library(SummarizedExperiment) })  if(grepl(\"^gizmo\", Sys.info()[\"nodename\"])){   ROOT_DIR1<-\"/fh/fast/furlan_s/datasets/AML/LOR_classifier/cds\"   ROOT_DIR2<-\"/fh/fast/furlan_s/grp/data/ddata/BM_data\"   ROOT_DIR3<-\"/fh/fast/furlan_s/grp/data/ddata/BM_data\" } else {   ROOT_DIR1<-\"/Users/sfurlan/Library/CloudStorage/OneDrive-SharedLibraries-FredHutchinsonCancerCenter/Furlan_Lab - General/datasets/AML/LOR_classifier/cds\"   ROOT_DIR2<-\"/Users/sfurlan/Library/CloudStorage/OneDrive-SharedLibraries-FredHutchinsonCancerCenter/Furlan_Lab - General/experiments/patient_marrows/aggr/cds/indy\"   ROOT_DIR3<-\"/Users/sfurlan/Library/CloudStorage/OneDrive-SharedLibraries-FredHutchinsonCancerCenter/Furlan_Lab - General/datasets/Healthy_BM_greenleaf\" }  #malignant ref (bulk) seuMR<-readRDS(file.path(ROOT_DIR1, \"240126_AML_object.RDS\")) seMR<-readRDS(file.path(ROOT_DIR1, \"240126_Combined_SE_Object.RDS\"))  #healthy ref (sc) seuHR <- readRDS(file.path(ROOT_DIR3, \"230329_rnaAugmented_seurat.RDS\"))  #query dataset seuP<-readRDS(file.path(ROOT_DIR2, \"220831_WC1.RDS\"))"},{"path":"https://furlan-lab.github.io/viewmastR/articles/BulkReference.html","id":"make-a-bulk-classifier","dir":"Articles","previous_headings":"","what":"Make a bulk classifier","title":"How to use a bulk dataset as a reference for viewmastR","text":"can see classifies cells scRNAseq experiment. first done loading data creating [Summarized Experiment] (https://bioconductor.org/packages/release/bioc/html/SummarizedExperiment.html). remove malignant/modified cells reference. function “splat_bulk_reference” takes SummarizedExperiment returns Seurat object made generating pseudo-single-cell data can used reference viewmastR. invoke viewmastR. Although necessary, can visualize UMAP single-cellified bulk reference using standard Seurat workflow. Finally, can visualize bulk viewmastR classification result compared published cell labels. , see fairly faithful overlap, bulk reference contain samples celltypes, cells plasma cells cDCs called celltypes.","code":"dat<-read.table(\"/Users/sfurlan/Library/CloudStorage/OneDrive-FredHutchinsonCancerCenter/computation/Analysis/ddata/MPAL/data/bulk/GSE74246_RNAseq_All_Counts.txt\", header = T) rownames(dat)<-dat$X_TranscriptID dat$X_TranscriptID<-NULL metad<-data.frame(sample = strsplit(colnames(dat), \"\\\\.\") %>% sapply(\"[[\", 1), celltype = strsplit(colnames(dat), \"\\\\.\") %>% sapply(\"[[\", 2)) rowd<-DataFrame(gene_short_name = rownames(dat), row.names = rownames(dat)) obj<-SummarizedExperiment::SummarizedExperiment(assays = list(counts=dat), rowData = rowd, colData = metad)   #remove samples we don't want obj<-obj[,!grepl(\"^Blast\", obj$celltype)] #blasts obj<-obj[,!grepl(\"^rHSC\", obj$celltype)] #recombinant HSCs obj<-obj[,!grepl(\"^LSC\", obj$celltype)] #leukemia stem cells #obj<-obj[,obj$sample %in% c(\"X5852\", \"X5483\")] #two donors  #undebug(splat_bulk_reference) seuF<-splat_bulk_reference(seuHR, obj, N=200)  seuF<-NormalizeData(seuF) seuF <- FindVariableFeatures(seuF,  nfeatures = 1000, assay = \"RNA\") seuF <- ScaleData(seuF) %>% RunPCA(features = VariableFeatures(object = seuF), npcs = 100) ElbowPlot(seuF, 100) seuF<- FindNeighbors(seuF, dims = 1:20) seuF <- FindClusters(seuF, resolution = 1.1) ## Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck ##  ## Number of nodes: 9800 ## Number of edges: 364126 ##  ## Running Louvain algorithm... ## Maximum modularity in 10 random starts: 0.9500 ## Number of communities: 34 ## Elapsed time: 0 seconds seuF <- RunUMAP(seuF, dims = 1:20, n.components = 2, min.dist = 0.6) DimPlot(seuF, group.by = \"celltype\", cols = as.character(pals::polychrome(20))) DimPlot(seuF, group.by = \"sample\", cols = as.character(pals::polychrome(20))) seuF<-calculate_gene_dispersion(seuF) seuF<-select_genes(seuF, top_n = 10000, logmean_ul = -1, logmean_ll = -8) vgr<-get_selected_genes(seuF) seuHR<-calculate_gene_dispersion(seuHR) seuHR<-select_genes(seuHR, top_n = 10000, logmean_ul = -1, logmean_ll = -8) vgq<-get_selected_genes(seuHR) vg<-intersect(vgq, vgr)  seuHR<-viewmastR::viewmastR(query_cds = seuHR, ref_cds = seuF, ref_celldata_col = \"celltype\", selected_genes = vg) cols<-c(seuHR@misc$colors[c(14,18,20,6,5,3,7,1,5,2,11)], \"cyan\", seuHR@misc$colors[c(21)]) names(cols)<-levels(factor(seuF$celltype))  DimPlot_scCustom(seuHR, group.by = \"viewmastR_smr\", colors_use  = cols, label = T, repel = T, label.box = T, label.color = \"white\") DimPlot_scCustom(seuHR, group.by = \"SFClassification\", colors_use  = seuHR@misc$colors, label = T, repel = T, label.box = T, label.color = \"white\")"},{"path":"https://furlan-lab.github.io/viewmastR/articles/BulkReference.html","id":"lets-look-at-a-patient","dir":"Articles","previous_headings":"","what":"Let’s look at a patient","title":"How to use a bulk dataset as a reference for viewmastR","text":"patient post transplant evidence chimerism. Let’s run viewmastR using reference healthy BM cells see cells annotate","code":"seuP<-calculate_gene_dispersion(seuP) seuP<-select_genes(seuP, top_n = 10000, logmean_ul = -1, logmean_ll = -8) vgr<-get_selected_genes(seuP) seuHR<-calculate_gene_dispersion(seuHR) seuHR<-select_genes(seuHR, top_n = 10000, logmean_ul = -1, logmean_ll = -8) vgq<-get_selected_genes(seuHR) vg<-intersect(vgq, vgr) seuP<-viewmastR::viewmastR(query_cds = seuP, ref_cds = seuHR, ref_celldata_col = \"SFClassification\", selected_genes = vg)  DimPlot_scCustom(seuP, group.by = \"viewmastR_smr\", colors_use = seuHR@misc$colors) seuP$geno_label<-seuP$geno seuP$geno_label[seuP$geno %in% \"0\"]<-\"Donor\" seuP$geno_label[seuP$geno %in% \"1\"]<-\"Recipient\" DimPlot_scCustom(seuP, group.by = \"geno_label\")"},{"path":"https://furlan-lab.github.io/viewmastR/articles/BulkReference.html","id":"interesting-that-we-see-some-lymphoidb-signature-in-this-patient-with-a-runx1-runx1t1-fusion","dir":"Articles","previous_headings":"","what":"Interesting that we see some lymphoid/B signature in this patient with a RUNX1-RUNX1T1 fusion","title":"How to use a bulk dataset as a reference for viewmastR","text":"","code":"Idents(seuP)<-seuP$viewmastR_smr #levels(factor(as.character(seuP$viewmastR_smr))) Cluster_Highlight_Plot(seuP, cluster_name = \"06_CLP\", highlight_color = seuHR@misc$colors) Cluster_Highlight_Plot(seuP, cluster_name = \"13_Pre.B\", highlight_color = seuHR@misc$colors) Cluster_Highlight_Plot(seuP, cluster_name = \"14_B\", highlight_color = seuHR@misc$colors)"},{"path":"https://furlan-lab.github.io/viewmastR/articles/BulkReference.html","id":"lets-investigate-how-the-tumor-annotates-using-a-bulk-reference-of-leukemia-cases","dir":"Articles","previous_headings":"","what":"Let’s investigate how the tumor annotates using a bulk reference of leukemia cases","title":"How to use a bulk dataset as a reference for viewmastR","text":"First pare data min 3 max 20 cases per leukemia subgroup. make 10 cells case, use resulting reference classify patient sample. seems Ph signature case even though majority tumor cells annotate correctly RUNX1-RUNX1T1","code":"obj<-seMR #rowData(obj) sttk<-names(table(obj$final_group))[table(obj$final_group)>3] sttk<-sttk[!sttk %in% \"Other\"] case_max<-20  obj<-obj[,obj$final_group %in% sttk] ds<-names(table(obj$final_group))[table(obj$final_group)>20] ctk<-lapply(names(table(obj$final_group)), function(type){   cases<-which(obj$final_group %in% type)   if (length(cases)>case_max){     cases<-sample(cases, case_max)   }   cases }) obj<-obj[,unlist(ctk)[order(unlist(ctk))]] #table(obj$final_group)  #debug(splat_bulk_reference) seuF<-splat_bulk_reference(seuP, obj, N=10)  seuF<-NormalizeData(seuF) seuF <- FindVariableFeatures(seuF,  nfeatures = 1000, assay = \"RNA\") seuF <- ScaleData(seuF) %>% RunPCA(features = VariableFeatures(object = seuF), npcs = 100) ElbowPlot(seuF, 100) seuF<- FindNeighbors(seuF, dims = 1:20) seuF <- FindClusters(seuF, resolution = 1.1) ## Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck ##  ## Number of nodes: 7360 ## Number of edges: 199517 ##  ## Running Louvain algorithm... ## Maximum modularity in 10 random starts: 0.9022 ## Number of communities: 34 ## Elapsed time: 0 seconds seuF <- RunUMAP(seuF, dims = 1:20, n.components = 2, min.dist = 0.2) DimPlot(seuF, group.by = \"final_group\") DimPlot(seuF, group.by = \"category0\") seuF<-calculate_gene_dispersion(seuF) seuF<-select_genes(seuF, top_n = 10000, logmean_ul = -1, logmean_ll = -8) vgr<-get_selected_genes(seuF) seuP<-calculate_gene_dispersion(seuP) seuP<-select_genes(seuP, top_n = 10000, logmean_ul = -1, logmean_ll = -8) vgq<-get_selected_genes(seuP) vg<-intersect(vgq, vgr)  seuP<-viewmastR::viewmastR(query_cds = seuP, ref_cds = seuF, ref_celldata_col = \"final_group\", selected_genes = vg)  thresh<-100 seuP$pred_thresh<-seuP$viewmastR_smr seuP$pred_thresh[seuP$pred_thresh %in% names(table(seuP$viewmastR_smr))[table(seuP$viewmastR_smr)<thresh]]<-\"Other\" DimPlot_scCustom(seuP, group.by = \"pred_thresh\")"},{"path":"https://furlan-lab.github.io/viewmastR/articles/BulkReference.html","id":"appendix","dir":"Articles","previous_headings":"","what":"Appendix","title":"How to use a bulk dataset as a reference for viewmastR","text":"","code":"sessionInfo() ## R version 4.3.1 (2023-06-16) ## Platform: aarch64-apple-darwin20 (64-bit) ## Running under: macOS Ventura 13.5.2 ##  ## Matrix products: default ## BLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib  ## LAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0 ##  ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ##  ## time zone: America/Los_Angeles ## tzcode source: internal ##  ## attached base packages: ## [1] stats4    stats     graphics  grDevices utils     datasets  methods   ## [8] base      ##  ## other attached packages: ##  [1] SummarizedExperiment_1.30.2 Biobase_2.60.0              ##  [3] GenomicRanges_1.52.1        GenomeInfoDb_1.36.4         ##  [5] IRanges_2.34.1              S4Vectors_0.38.2            ##  [7] BiocGenerics_0.46.0         MatrixGenerics_1.12.3       ##  [9] matrixStats_1.1.0           magrittr_2.0.3              ## [11] scCustomize_2.0.1           ggplot2_3.4.4               ## [13] Seurat_5.0.1                SeuratObject_5.0.1          ## [15] sp_2.1-2                    viewmastR_0.2.0             ##  ## loaded via a namespace (and not attached): ##   [1] fs_1.6.3                    spatstat.sparse_3.0-3       ##   [3] bitops_1.0-7                RcppMsgPack_0.2.3           ##   [5] lubridate_1.9.3             httr_1.4.7                  ##   [7] RColorBrewer_1.1-3          doParallel_1.0.17           ##   [9] tools_4.3.1                 sctransform_0.4.1           ##  [11] backports_1.4.1             utf8_1.2.4                  ##  [13] R6_2.5.1                    lazyeval_0.2.2              ##  [15] uwot_0.1.16                 GetoptLong_1.0.5            ##  [17] withr_2.5.2                 gridExtra_2.3               ##  [19] progressr_0.14.0            cli_3.6.1                   ##  [21] textshaping_0.3.7           spatstat.explore_3.2-5      ##  [23] fastDummies_1.7.3           prismatic_1.1.1             ##  [25] labeling_0.4.3              sass_0.4.8                  ##  [27] spatstat.data_3.0-3         ggridges_0.5.4              ##  [29] pbapply_1.7-2               pkgdown_2.0.7               ##  [31] systemfonts_1.0.5           foreign_0.8-86              ##  [33] dichromat_2.0-0.1           parallelly_1.36.0           ##  [35] maps_3.4.1.1                pals_1.8                    ##  [37] rstudioapi_0.15.0           generics_0.1.3              ##  [39] shape_1.4.6                 ica_1.0-3                   ##  [41] spatstat.random_3.2-2       dplyr_1.1.4                 ##  [43] Matrix_1.6-4                ggbeeswarm_0.7.2            ##  [45] fansi_1.0.6                 abind_1.4-5                 ##  [47] terra_1.7-55                lifecycle_1.0.4             ##  [49] yaml_2.3.7                  snakecase_0.11.1            ##  [51] recipes_1.0.8               Rtsne_0.17                  ##  [53] paletteer_1.5.0             grid_4.3.1                  ##  [55] promises_1.2.1              crayon_1.5.2                ##  [57] miniUI_0.1.1.1              lattice_0.22-5              ##  [59] cowplot_1.1.1               mapproj_1.2.11              ##  [61] pillar_1.9.0                knitr_1.45                  ##  [63] ComplexHeatmap_2.16.0       rjson_0.2.21                ##  [65] boot_1.3-28.1               future.apply_1.11.0         ##  [67] codetools_0.2-19            leiden_0.4.3.1              ##  [69] glue_1.6.2                  MatrixExtra_0.1.14          ##  [71] data.table_1.14.10          float_0.3-1                 ##  [73] vctrs_0.6.5                 png_0.1-8                   ##  [75] spam_2.10-0                 gtable_0.3.4                ##  [77] rematch2_2.1.2              assertthat_0.2.1            ##  [79] cachem_1.0.8                gower_1.0.1                 ##  [81] xfun_0.41                   S4Arrays_1.0.6              ##  [83] mime_0.12                   prodlim_2023.08.28          ##  [85] survival_3.5-7              timeDate_4022.108           ##  [87] SingleCellExperiment_1.22.0 iterators_1.0.14            ##  [89] pbmcapply_1.5.1             hardhat_1.3.0               ##  [91] lava_1.7.3                  ellipsis_0.3.2              ##  [93] fitdistrplus_1.1-11         ROCR_1.0-11                 ##  [95] ipred_0.9-14                nlme_3.1-164                ##  [97] RcppAnnoy_0.0.21            rprojroot_2.0.4             ##  [99] bslib_0.6.1                 irlba_2.3.5.1               ## [101] vipor_0.4.5                 KernSmooth_2.23-22          ## [103] rpart_4.1.23                colorspace_2.1-0            ## [105] Hmisc_5.1-1                 nnet_7.3-19                 ## [107] ggrastr_1.0.2               tidyselect_1.2.0            ## [109] compiler_4.3.1              htmlTable_2.4.2             ## [111] desc_1.4.2                  DelayedArray_0.26.7         ## [113] plotly_4.10.3               checkmate_2.3.1             ## [115] scales_1.3.0                lmtest_0.9-40               ## [117] stringr_1.5.1               digest_0.6.33               ## [119] goftest_1.2-3               spatstat.utils_3.0-4        ## [121] minqa_1.2.6                 rmarkdown_2.25              ## [123] XVector_0.40.0              RhpcBLASctl_0.23-42         ## [125] htmltools_0.5.7             pkgconfig_2.0.3             ## [127] base64enc_0.1-3             lme4_1.1-35.1               ## [129] sparseMatrixStats_1.12.2    highr_0.10                  ## [131] fastmap_1.1.1               rlang_1.1.2                 ## [133] GlobalOptions_0.1.2         htmlwidgets_1.6.4           ## [135] shiny_1.8.0                 DelayedMatrixStats_1.22.6   ## [137] farver_2.1.1                jquerylib_0.1.4             ## [139] zoo_1.8-12                  jsonlite_1.8.8              ## [141] ModelMetrics_1.2.2.2        RCurl_1.98-1.13             ## [143] Formula_1.2-5               GenomeInfoDbData_1.2.10     ## [145] dotCall64_1.1-1             patchwork_1.1.3             ## [147] munsell_0.5.0               Rcpp_1.0.11                 ## [149] reticulate_1.34.0           stringi_1.8.2               ## [151] pROC_1.18.5                 zlibbioc_1.46.0             ## [153] MASS_7.3-60                 plyr_1.8.9                  ## [155] parallel_4.3.1              listenv_0.9.0               ## [157] ggrepel_0.9.4               forcats_1.0.0               ## [159] deldir_2.0-2                splines_4.3.1               ## [161] tensor_1.5                  circlize_0.4.15             ## [163] igraph_1.5.1                spatstat.geom_3.2-7         ## [165] RcppHNSW_0.5.0              reshape2_1.4.4              ## [167] evaluate_0.23               ggprism_1.0.4               ## [169] nloptr_2.0.3                foreach_1.5.2               ## [171] httpuv_1.6.13               RANN_2.6.1                  ## [173] tidyr_1.3.0                 purrr_1.0.2                 ## [175] polyclip_1.10-6             future_1.33.0               ## [177] clue_0.3-65                 scattermore_1.2             ## [179] janitor_2.2.0               xtable_1.8-4                ## [181] monocle3_1.3.4              RSpectra_0.16-1             ## [183] later_1.3.2                 viridisLite_0.4.2           ## [185] class_7.3-22                ragg_1.2.6                  ## [187] tibble_3.2.1                memoise_2.0.1               ## [189] beeswarm_0.4.0              cluster_2.1.6               ## [191] timechange_0.2.0            globals_0.16.2              ## [193] caret_6.0-94 getwd() ## [1] \"/Users/sfurlan/develop/viewmastR/vignettes\""},{"path":"https://furlan-lab.github.io/viewmastR/articles/HowTo.html","id":"installing-rust","dir":"Articles","previous_headings":"","what":"Installing Rust","title":"How to use viewmastR","text":"First need updated Rust installation. Go site learn install Rust.","code":""},{"path":"https://furlan-lab.github.io/viewmastR/articles/HowTo.html","id":"installing-viewmastr","dir":"Articles","previous_headings":"","what":"Installing viewmastR","title":"How to use viewmastR","text":"need devtools package installed…","code":"devtools::install_github(\"furlan-lab/viewmastR\")"},{"path":"https://furlan-lab.github.io/viewmastR/articles/HowTo.html","id":"running-viewmastr","dir":"Articles","previous_headings":"","what":"Running viewmastR","title":"How to use viewmastR","text":"","code":"rm(list=ls()) suppressPackageStartupMessages({ library(viewmastR) library(Seurat) library(ggplot2) }) if(grepl(\"^gizmo\", Sys.info()[\"nodename\"])){   ROOT_DIR1<-\"/fh/fast/furlan_s/experiments/MB_10X_5p/cds\"   ROOT_DIR2<-\"/fh/fast/furlan_s/grp/data/ddata/BM_data\" } else {   ROOT_DIR1<-\"/Users/sfurlan/Library/CloudStorage/OneDrive-SharedLibraries-FredHutchinsonCancerCenter/Furlan_Lab - General/experiments/MB_10X_5p/cds\"   ROOT_DIR2<-\"/Users/sfurlan/Library/CloudStorage/OneDrive-SharedLibraries-FredHutchinsonCancerCenter/Furlan_Lab - General/datasets/Healthy_BM_greenleaf\" } #query dataset seu<-readRDS(file.path(ROOT_DIR1, \"220302_final_object.RDS\")) #reference dataset seur<-readRDS(file.path(ROOT_DIR2, \"230329_rnaAugmented_seurat.RDS\")) #harmonize labels labels<-levels(factor(seur$SFClassification)) seu$ground_truth<-factor(seu$seurat_clusters) levels(seu$ground_truth)<-c(labels[11], #0                             labels[18], #1                             labels[11], #2                             labels[17], #3                             labels[20], #4                             labels[21], #5                             labels[14], #6                             labels[12], #7                             labels[16], #8,                             labels[18], #9,                             labels[14], #10,                             labels[19], #11,                             labels[10], #12,                             labels[11], #13,                             labels[11]) seu$ground_truth<-as.character(seu$ground_truth)"},{"path":"https://furlan-lab.github.io/viewmastR/articles/HowTo.html","id":"lets-plot-ground-truth","dir":"Articles","previous_headings":"","what":"Let’s plot ground truth","title":"How to use viewmastR","text":"","code":"DimPlot(seu, group.by = \"ground_truth\", cols = seur@misc$colors)"},{"path":"https://furlan-lab.github.io/viewmastR/articles/HowTo.html","id":"find-common-features","dir":"Articles","previous_headings":"","what":"Find common features","title":"How to use viewmastR","text":"","code":"seu<-calculate_gene_dispersion(seu) plot_gene_dispersion(seu) seu<-select_genes(seu, top_n = 10000, logmean_ul = -1, logmean_ll = -8) plot_gene_dispersion(seu) vgq<-get_selected_genes(seu) seur<-calculate_gene_dispersion(seur) plot_gene_dispersion(seur) seur<-select_genes(seur, top_n = 10000, logmean_ul = -1, logmean_ll = -8) plot_gene_dispersion(seur) vgr<-get_selected_genes(seur) vg<-intersect(vgq, vgr)"},{"path":"https://furlan-lab.github.io/viewmastR/articles/HowTo.html","id":"here-are-the-reference-cell-types","dir":"Articles","previous_headings":"","what":"Here are the reference cell types","title":"How to use viewmastR","text":"","code":"DimPlot(seur, group.by = \"SFClassification\", cols = seur@misc$colors)"},{"path":"https://furlan-lab.github.io/viewmastR/articles/HowTo.html","id":"now-you-run-viewmastr","dir":"Articles","previous_headings":"","what":"Now you run viewmastR","title":"How to use viewmastR","text":"Note invocation used prior versions viewmastR output can obtained (read )","code":"seu<-viewmastR(seu, seur, ref_celldata_col = \"SFClassification\", selected_genes = vg)"},{"path":"https://furlan-lab.github.io/viewmastR/articles/HowTo.html","id":"a-look-at-the-predictions","dir":"Articles","previous_headings":"","what":"A look at the predictions","title":"How to use viewmastR","text":"","code":"DimPlot(seu, group.by = \"viewmastR_smr\", cols = seur@misc$colors)"},{"path":"https://furlan-lab.github.io/viewmastR/articles/HowTo.html","id":"a-confusion-matrix-showing-prediction-vs-ground-truth","dir":"Articles","previous_headings":"","what":"A confusion matrix showing prediction vs ground truth","title":"How to use viewmastR","text":"","code":"confusion_matrix(pred = factor(seu$viewmastR_smr), gt = factor(seu$ground_truth), cols = seur@misc$colors)"},{"path":"https://furlan-lab.github.io/viewmastR/articles/HowTo.html","id":"a-look-at-the-training-history","dir":"Articles","previous_headings":"","what":"A look at the training history","title":"How to use viewmastR","text":"ViewmastR records key learning data generated training. can optionally returned setting ‘return_type’ parameter “list”. Using setting, function return named list containing following items (1 named ‘object’) - query object celltype prediction added metadata () (2 named “training output”) set results obtained training. ’s example may used. First run viewmastR changing return type… Now can plot learning data. can see training loss continues decrease steadily beyond 6th epoch, yet validation loss . suggests potentially overfitting 6 epochs.","code":"output_list<-viewmastR(seu, seur, ref_celldata_col = \"SFClassification\", selected_genes = vg, return_type= \"list\") plot_training_data(output_list)"},{"path":"https://furlan-lab.github.io/viewmastR/articles/HowTo.html","id":"appendix","dir":"Articles","previous_headings":"","what":"Appendix","title":"How to use viewmastR","text":"","code":"sessionInfo() ## R version 4.3.1 (2023-06-16) ## Platform: aarch64-apple-darwin20 (64-bit) ## Running under: macOS Ventura 13.5.2 ##  ## Matrix products: default ## BLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib  ## LAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0 ##  ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ##  ## time zone: America/Los_Angeles ## tzcode source: internal ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] ggplot2_3.4.4      Seurat_5.0.1       SeuratObject_5.0.1 sp_2.1-2           ## [5] viewmastR_0.2.0    ##  ## loaded via a namespace (and not attached): ##   [1] fs_1.6.3                    matrixStats_1.1.0           ##   [3] spatstat.sparse_3.0-3       bitops_1.0-7                ##   [5] RcppMsgPack_0.2.3           lubridate_1.9.3             ##   [7] httr_1.4.7                  RColorBrewer_1.1-3          ##   [9] doParallel_1.0.17           tools_4.3.1                 ##  [11] sctransform_0.4.1           backports_1.4.1             ##  [13] utf8_1.2.4                  R6_2.5.1                    ##  [15] lazyeval_0.2.2              uwot_0.1.16                 ##  [17] GetoptLong_1.0.5            withr_2.5.2                 ##  [19] gridExtra_2.3               scCustomize_2.0.1           ##  [21] progressr_0.14.0            cli_3.6.1                   ##  [23] Biobase_2.60.0              textshaping_0.3.7           ##  [25] Cairo_1.6-2                 spatstat.explore_3.2-5      ##  [27] fastDummies_1.7.3           labeling_0.4.3              ##  [29] sass_0.4.8                  spatstat.data_3.0-3         ##  [31] proxy_0.4-27                ggridges_0.5.4              ##  [33] pbapply_1.7-2               pkgdown_2.0.7               ##  [35] systemfonts_1.0.5           foreign_0.8-86              ##  [37] parallelly_1.36.0           rstudioapi_0.15.0           ##  [39] generics_0.1.3              shape_1.4.6                 ##  [41] crosstalk_1.2.1             ica_1.0-3                   ##  [43] spatstat.random_3.2-2       dplyr_1.1.4                 ##  [45] Matrix_1.6-4                ggbeeswarm_0.7.2            ##  [47] fansi_1.0.6                 S4Vectors_0.38.2            ##  [49] abind_1.4-5                 terra_1.7-55                ##  [51] lifecycle_1.0.4             yaml_2.3.7                  ##  [53] snakecase_0.11.1            SummarizedExperiment_1.30.2 ##  [55] recipes_1.0.8               Rtsne_0.17                  ##  [57] paletteer_1.5.0             grid_4.3.1                  ##  [59] promises_1.2.1              crayon_1.5.2                ##  [61] miniUI_0.1.1.1              lattice_0.22-5              ##  [63] cowplot_1.1.1               pillar_1.9.0                ##  [65] knitr_1.45                  ComplexHeatmap_2.16.0       ##  [67] GenomicRanges_1.52.1        rjson_0.2.21                ##  [69] boot_1.3-28.1               future.apply_1.11.0         ##  [71] codetools_0.2-19            leiden_0.4.3.1              ##  [73] glue_1.6.2                  MatrixExtra_0.1.14          ##  [75] data.table_1.14.10          float_0.3-1                 ##  [77] vctrs_0.6.5                 png_0.1-8                   ##  [79] spam_2.10-0                 gtable_0.3.4                ##  [81] rematch2_2.1.2              assertthat_0.2.1            ##  [83] cachem_1.0.8                gower_1.0.1                 ##  [85] xfun_0.41                   S4Arrays_1.0.6              ##  [87] mime_0.12                   prodlim_2023.08.28          ##  [89] survival_3.5-7              timeDate_4022.108           ##  [91] SingleCellExperiment_1.22.0 iterators_1.0.14            ##  [93] pbmcapply_1.5.1             hardhat_1.3.0               ##  [95] lava_1.7.3                  ellipsis_0.3.2              ##  [97] fitdistrplus_1.1-11         ROCR_1.0-11                 ##  [99] ipred_0.9-14                nlme_3.1-164                ## [101] RcppAnnoy_0.0.21            GenomeInfoDb_1.36.4         ## [103] rprojroot_2.0.4             bslib_0.6.1                 ## [105] irlba_2.3.5.1               vipor_0.4.5                 ## [107] KernSmooth_2.23-22          rpart_4.1.23                ## [109] colorspace_2.1-0            BiocGenerics_0.46.0         ## [111] Hmisc_5.1-1                 nnet_7.3-19                 ## [113] ggrastr_1.0.2               tidyselect_1.2.0            ## [115] compiler_4.3.1              htmlTable_2.4.2             ## [117] desc_1.4.2                  DelayedArray_0.26.7         ## [119] plotly_4.10.3               checkmate_2.3.1             ## [121] scales_1.3.0                lmtest_0.9-40               ## [123] stringr_1.5.1               digest_0.6.33               ## [125] goftest_1.2-3               spatstat.utils_3.0-4        ## [127] minqa_1.2.6                 rmarkdown_2.25              ## [129] XVector_0.40.0              RhpcBLASctl_0.23-42         ## [131] htmltools_0.5.7             pkgconfig_2.0.3             ## [133] base64enc_0.1-3             lme4_1.1-35.1               ## [135] sparseMatrixStats_1.12.2    MatrixGenerics_1.12.3       ## [137] highr_0.10                  fastmap_1.1.1               ## [139] rlang_1.1.2                 GlobalOptions_0.1.2         ## [141] htmlwidgets_1.6.4           shiny_1.8.0                 ## [143] DelayedMatrixStats_1.22.6   farver_2.1.1                ## [145] jquerylib_0.1.4             zoo_1.8-12                  ## [147] jsonlite_1.8.8              ModelMetrics_1.2.2.2        ## [149] RCurl_1.98-1.13             magrittr_2.0.3              ## [151] Formula_1.2-5               GenomeInfoDbData_1.2.10     ## [153] dotCall64_1.1-1             patchwork_1.1.3             ## [155] munsell_0.5.0               Rcpp_1.0.11                 ## [157] reticulate_1.34.0           stringi_1.8.2               ## [159] pROC_1.18.5                 zlibbioc_1.46.0             ## [161] MASS_7.3-60                 plyr_1.8.9                  ## [163] parallel_4.3.1              listenv_0.9.0               ## [165] ggrepel_0.9.4               forcats_1.0.0               ## [167] deldir_2.0-2                splines_4.3.1               ## [169] tensor_1.5                  circlize_0.4.15             ## [171] igraph_1.5.1                spatstat.geom_3.2-7         ## [173] RcppHNSW_0.5.0              reshape2_1.4.4              ## [175] stats4_4.3.1                evaluate_0.23               ## [177] ggprism_1.0.4               nloptr_2.0.3                ## [179] foreach_1.5.2               httpuv_1.6.13               ## [181] RANN_2.6.1                  tidyr_1.3.0                 ## [183] purrr_1.0.2                 polyclip_1.10-6             ## [185] future_1.33.0               clue_0.3-65                 ## [187] scattermore_1.2             janitor_2.2.0               ## [189] xtable_1.8-4                monocle3_1.3.4              ## [191] e1071_1.7-14                RSpectra_0.16-1             ## [193] later_1.3.2                 viridisLite_0.4.2           ## [195] class_7.3-22                ragg_1.2.6                  ## [197] tibble_3.2.1                memoise_2.0.1               ## [199] beeswarm_0.4.0              IRanges_2.34.1              ## [201] cluster_2.1.6               timechange_0.2.0            ## [203] globals_0.16.2              caret_6.0-94 getwd() ## [1] \"/Users/sfurlan/develop/viewmastR/vignettes\""},{"path":"https://furlan-lab.github.io/viewmastR/articles/SavedModel.html","id":"installing-rust","dir":"Articles","previous_headings":"","what":"Installing Rust","title":"How to use viewmastR with saved models","text":"First need updated Rust installation. Go site learn install Rust.","code":""},{"path":"https://furlan-lab.github.io/viewmastR/articles/SavedModel.html","id":"installing-viewmastr","dir":"Articles","previous_headings":"","what":"Installing viewmastR","title":"How to use viewmastR with saved models","text":"need devtools package installed…","code":"devtools::install_github(\"furlan-lab/viewmastR\")"},{"path":"https://furlan-lab.github.io/viewmastR/articles/SavedModel.html","id":"running-viewmastr","dir":"Articles","previous_headings":"","what":"Running viewmastR","title":"How to use viewmastR with saved models","text":"","code":"rm(list=ls()) suppressPackageStartupMessages({ library(viewmastR) library(Seurat) library(ggplot2) }) if(grepl(\"^gizmo\", Sys.info()[\"nodename\"])){   ROOT_DIR1<-\"/fh/fast/furlan_s/experiments/MB_10X_5p/cds\"   ROOT_DIR2<-\"/fh/fast/furlan_s/grp/data/ddata/BM_data\" } else {   ROOT_DIR1<-\"/Users/sfurlan/Library/CloudStorage/OneDrive-SharedLibraries-FredHutchinsonCancerCenter/Furlan_Lab - General/experiments/MB_10X_5p/cds\"   ROOT_DIR2<-\"/Users/sfurlan/Library/CloudStorage/OneDrive-SharedLibraries-FredHutchinsonCancerCenter/Furlan_Lab - General/datasets/Healthy_BM_greenleaf\" } #query dataset seu<-readRDS(file.path(ROOT_DIR1, \"220302_final_object.RDS\")) #reference dataset seur<-readRDS(file.path(ROOT_DIR2, \"230329_rnaAugmented_seurat.RDS\"))"},{"path":"https://furlan-lab.github.io/viewmastR/articles/SavedModel.html","id":"find-common-features","dir":"Articles","previous_headings":"","what":"Find common features","title":"How to use viewmastR with saved models","text":"","code":"seu<-calculate_gene_dispersion(seu) plot_gene_dispersion(seu) seu<-select_genes(seu, top_n = 10000, logmean_ul = -1, logmean_ll = -8) plot_gene_dispersion(seu) vgq<-get_selected_genes(seu) seur<-calculate_gene_dispersion(seur) plot_gene_dispersion(seur) seur<-select_genes(seur, top_n = 10000, logmean_ul = -1, logmean_ll = -8) plot_gene_dispersion(seur) vgr<-get_selected_genes(seur) vg<-intersect(vgq, vgr)"},{"path":"https://furlan-lab.github.io/viewmastR/articles/SavedModel.html","id":"here-are-the-reference-cell-types","dir":"Articles","previous_headings":"","what":"Here are the reference cell types","title":"How to use viewmastR with saved models","text":"","code":"DimPlot(seur, group.by = \"SFClassification\", cols = seur@misc$colors)"},{"path":"https://furlan-lab.github.io/viewmastR/articles/SavedModel.html","id":"now-you-run-viewmastr","dir":"Articles","previous_headings":"","what":"Now you run viewmastR","title":"How to use viewmastR with saved models","text":"model path specified using ‘dir’ argument","code":"seu<-viewmastR(seu, seur, ref_celldata_col = \"SFClassification\", selected_genes = vg, dir = \"/Users/sfurlan/develop/viewmastR/model\", max_epochs = 3)"},{"path":"https://furlan-lab.github.io/viewmastR/articles/SavedModel.html","id":"a-look-at-the-predictions","dir":"Articles","previous_headings":"","what":"A look at the predictions","title":"How to use viewmastR with saved models","text":"","code":"DimPlot(seu, group.by = \"viewmastR_smr\", cols = seur@misc$colors)"},{"path":"https://furlan-lab.github.io/viewmastR/articles/SavedModel.html","id":"run-inference","dir":"Articles","previous_headings":"","what":"Run inference","title":"How to use viewmastR with saved models","text":"can use function viewmastR_infer run inference saved model. need pass vector variable features used initially create model. can use query_celldata_col specify name metadata column returned object. optional vector labels can provided. Additionally, instead returning input object predictions added, may instead return probabilities using return_probs argument.","code":"seu<-viewmastR_infer(seu, \"/Users/sfurlan/develop/viewmastR/model/model.mpk\", vg, labels = levels(factor(seur$SFClassification)))   DimPlot(seu, group.by = \"viewmastR_inferred\", cols = seur@misc$colors)"},{"path":"https://furlan-lab.github.io/viewmastR/articles/SavedModel.html","id":"a-confusion-matrix-comparing-the-results-using-viewmastr-to-viewmastr_infer-having-saved-the-model-to-disc-","dir":"Articles","previous_headings":"","what":"A confusion matrix comparing the results using viewmastR to viewmastR_infer having saved the model to disc.","title":"How to use viewmastR with saved models","text":"","code":"confusion_matrix(pred = factor(seu$viewmastR_inferred), gt = factor(seu$viewmastR_smr), cols = seur@misc$colors)"},{"path":"https://furlan-lab.github.io/viewmastR/articles/SavedModel.html","id":"appendix","dir":"Articles","previous_headings":"","what":"Appendix","title":"How to use viewmastR with saved models","text":"","code":"sessionInfo() ## R version 4.3.1 (2023-06-16) ## Platform: aarch64-apple-darwin20 (64-bit) ## Running under: macOS Ventura 13.5.2 ##  ## Matrix products: default ## BLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib  ## LAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0 ##  ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ##  ## time zone: America/Los_Angeles ## tzcode source: internal ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] ggplot2_3.4.4      Seurat_5.0.1       SeuratObject_5.0.1 sp_2.1-2           ## [5] viewmastR_0.2.0    ##  ## loaded via a namespace (and not attached): ##   [1] fs_1.6.3                    matrixStats_1.1.0           ##   [3] spatstat.sparse_3.0-3       bitops_1.0-7                ##   [5] RcppMsgPack_0.2.3           lubridate_1.9.3             ##   [7] httr_1.4.7                  RColorBrewer_1.1-3          ##   [9] doParallel_1.0.17           tools_4.3.1                 ##  [11] sctransform_0.4.1           backports_1.4.1             ##  [13] utf8_1.2.4                  R6_2.5.1                    ##  [15] lazyeval_0.2.2              uwot_0.1.16                 ##  [17] GetoptLong_1.0.5            withr_2.5.2                 ##  [19] gridExtra_2.3               scCustomize_2.0.1           ##  [21] progressr_0.14.0            cli_3.6.1                   ##  [23] Biobase_2.60.0              textshaping_0.3.7           ##  [25] Cairo_1.6-2                 spatstat.explore_3.2-5      ##  [27] fastDummies_1.7.3           labeling_0.4.3              ##  [29] sass_0.4.8                  spatstat.data_3.0-3         ##  [31] proxy_0.4-27                ggridges_0.5.4              ##  [33] pbapply_1.7-2               pkgdown_2.0.7               ##  [35] systemfonts_1.0.5           foreign_0.8-86              ##  [37] parallelly_1.36.0           rstudioapi_0.15.0           ##  [39] generics_0.1.3              shape_1.4.6                 ##  [41] ica_1.0-3                   spatstat.random_3.2-2       ##  [43] dplyr_1.1.4                 Matrix_1.6-4                ##  [45] ggbeeswarm_0.7.2            fansi_1.0.6                 ##  [47] S4Vectors_0.38.2            abind_1.4-5                 ##  [49] terra_1.7-55                lifecycle_1.0.4             ##  [51] yaml_2.3.7                  snakecase_0.11.1            ##  [53] SummarizedExperiment_1.30.2 recipes_1.0.8               ##  [55] Rtsne_0.17                  paletteer_1.5.0             ##  [57] grid_4.3.1                  promises_1.2.1              ##  [59] crayon_1.5.2                miniUI_0.1.1.1              ##  [61] lattice_0.22-5              cowplot_1.1.1               ##  [63] pillar_1.9.0                knitr_1.45                  ##  [65] ComplexHeatmap_2.16.0       GenomicRanges_1.52.1        ##  [67] rjson_0.2.21                boot_1.3-28.1               ##  [69] future.apply_1.11.0         codetools_0.2-19            ##  [71] leiden_0.4.3.1              glue_1.6.2                  ##  [73] MatrixExtra_0.1.14          data.table_1.14.10          ##  [75] float_0.3-1                 vctrs_0.6.5                 ##  [77] png_0.1-8                   spam_2.10-0                 ##  [79] gtable_0.3.4                rematch2_2.1.2              ##  [81] assertthat_0.2.1            cachem_1.0.8                ##  [83] gower_1.0.1                 xfun_0.41                   ##  [85] S4Arrays_1.0.6              mime_0.12                   ##  [87] prodlim_2023.08.28          survival_3.5-7              ##  [89] timeDate_4022.108           SingleCellExperiment_1.22.0 ##  [91] iterators_1.0.14            pbmcapply_1.5.1             ##  [93] hardhat_1.3.0               lava_1.7.3                  ##  [95] ellipsis_0.3.2              fitdistrplus_1.1-11         ##  [97] ROCR_1.0-11                 ipred_0.9-14                ##  [99] nlme_3.1-164                RcppAnnoy_0.0.21            ## [101] GenomeInfoDb_1.36.4         rprojroot_2.0.4             ## [103] bslib_0.6.1                 irlba_2.3.5.1               ## [105] vipor_0.4.5                 KernSmooth_2.23-22          ## [107] rpart_4.1.23                colorspace_2.1-0            ## [109] BiocGenerics_0.46.0         Hmisc_5.1-1                 ## [111] nnet_7.3-19                 ggrastr_1.0.2               ## [113] tidyselect_1.2.0            compiler_4.3.1              ## [115] htmlTable_2.4.2             desc_1.4.2                  ## [117] DelayedArray_0.26.7         plotly_4.10.3               ## [119] checkmate_2.3.1             scales_1.3.0                ## [121] lmtest_0.9-40               stringr_1.5.1               ## [123] digest_0.6.33               goftest_1.2-3               ## [125] spatstat.utils_3.0-4        minqa_1.2.6                 ## [127] rmarkdown_2.25              XVector_0.40.0              ## [129] RhpcBLASctl_0.23-42         htmltools_0.5.7             ## [131] pkgconfig_2.0.3             base64enc_0.1-3             ## [133] lme4_1.1-35.1               sparseMatrixStats_1.12.2    ## [135] MatrixGenerics_1.12.3       highr_0.10                  ## [137] fastmap_1.1.1               rlang_1.1.2                 ## [139] GlobalOptions_0.1.2         htmlwidgets_1.6.4           ## [141] shiny_1.8.0                 DelayedMatrixStats_1.22.6   ## [143] farver_2.1.1                jquerylib_0.1.4             ## [145] zoo_1.8-12                  jsonlite_1.8.8              ## [147] ModelMetrics_1.2.2.2        RCurl_1.98-1.13             ## [149] magrittr_2.0.3              Formula_1.2-5               ## [151] GenomeInfoDbData_1.2.10     dotCall64_1.1-1             ## [153] patchwork_1.1.3             munsell_0.5.0               ## [155] Rcpp_1.0.11                 reticulate_1.34.0           ## [157] stringi_1.8.2               pROC_1.18.5                 ## [159] zlibbioc_1.46.0             MASS_7.3-60                 ## [161] plyr_1.8.9                  parallel_4.3.1              ## [163] listenv_0.9.0               ggrepel_0.9.4               ## [165] forcats_1.0.0               deldir_2.0-2                ## [167] splines_4.3.1               tensor_1.5                  ## [169] circlize_0.4.15             igraph_1.5.1                ## [171] spatstat.geom_3.2-7         RcppHNSW_0.5.0              ## [173] reshape2_1.4.4              stats4_4.3.1                ## [175] evaluate_0.23               ggprism_1.0.4               ## [177] nloptr_2.0.3                foreach_1.5.2               ## [179] httpuv_1.6.13               RANN_2.6.1                  ## [181] tidyr_1.3.0                 purrr_1.0.2                 ## [183] polyclip_1.10-6             future_1.33.0               ## [185] clue_0.3-65                 scattermore_1.2             ## [187] janitor_2.2.0               xtable_1.8-4                ## [189] monocle3_1.3.4              e1071_1.7-14                ## [191] RSpectra_0.16-1             later_1.3.2                 ## [193] viridisLite_0.4.2           class_7.3-22                ## [195] ragg_1.2.6                  tibble_3.2.1                ## [197] memoise_2.0.1               beeswarm_0.4.0              ## [199] IRanges_2.34.1              cluster_2.1.6               ## [201] timechange_0.2.0            globals_0.16.2              ## [203] caret_6.0-94 getwd() ## [1] \"/Users/sfurlan/develop/viewmastR/vignettes\""},{"path":"https://furlan-lab.github.io/viewmastR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Scott Furlan. Author, maintainer.","code":""},{"path":"https://furlan-lab.github.io/viewmastR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Furlan S (2024). viewmastR: Automated single-cell genomic cell type assignment. R package version 0.2.0, https://furlan-lab.github.io/viewmastR/.","code":"@Manual{,   title = {viewmastR: Automated single-cell genomic cell type assignment},   author = {Scott Furlan},   year = {2024},   note = {R package version 0.2.0},   url = {https://furlan-lab.github.io/viewmastR/}, }"},{"path":"https://furlan-lab.github.io/viewmastR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Automated single-cell genomic cell type assignment","text":"First need updated Rust installation. Go site learn install Rust. install development version viewmastR:","code":"remotes::install_github(\"furlan-lab/viewmastR\")"},{"path":"https://furlan-lab.github.io/viewmastR/index.html","id":"how-to-start","dir":"","previous_headings":"","what":"How to start","title":"Automated single-cell genomic cell type assignment","text":"vignettes vignette(\"HowTo\") explore basics package. vignette(\"Augment\") explore data augmentation vignette(\"BulkClassify\") see use bulk dataset classify single-cell profiles","code":""},{"path":"https://furlan-lab.github.io/viewmastR/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Automated single-cell genomic cell type assignment","text":"viewmastR dependency Burn, open source Rust machine learning library. viewmastR written MIT license.","code":""},{"path":"https://furlan-lab.github.io/viewmastR/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Automated single-cell genomic cell type assignment","text":"Written Scott Furlan.","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/GMT_to_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a GMT File to a ragged list of genes — GMT_to_list","title":"Convert a GMT File to a ragged list of genes — GMT_to_list","text":"GMT Files (See MSigDB) convenient means storing genesets","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/GMT_to_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a GMT File to a ragged list of genes — GMT_to_list","text":"","code":"GMT_to_list(GMTfn)"},{"path":"https://furlan-lab.github.io/viewmastR/reference/GMT_to_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a GMT File to a ragged list of genes — GMT_to_list","text":"GMTfn GMT filename","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/add_souporcell_seurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Add souporcell clustering file output to a seurat object — add_souporcell_seurat","title":"Add souporcell clustering file output to a seurat object — add_souporcell_seurat","text":"function takes input seurat object location souporcell file (clusters.tsv).  function add assay seurat object reduced dimensions said assay principal components log cluster probabilities returned souporcell clusters.tsv file.  cluster probabalities normalized mean log transformation PCA. souporcell 'assignment' added seurat metadata using meta_data_label argument.  Name dimensionality reduction can set using rd_label argument, accompanying key set key argument assay name set using assay_name.  Use rename_assignments parameter set genotype numbering 1-indexed (instead 0-indexed souporcell output) collapse genotype multiplet designations (0/1, 1/0, 0/2, 2/0, etc) \"multiplet\".  feature turned setting rename_assignments F.","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/add_souporcell_seurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add souporcell clustering file output to a seurat object — add_souporcell_seurat","text":"","code":"add_souporcell_seurat(   obj,   souporcell_file,   prefix = NULL,   assay_name = \"GENO\",   key = \"gpca_\",   meta_data_label = \"geno\",   rd_label = \"gpca\",   rename_assignments = T )"},{"path":"https://furlan-lab.github.io/viewmastR/reference/add_souporcell_seurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add souporcell clustering file output to a seurat object — add_souporcell_seurat","text":"obj input Seurat object souporcell_file location souporcell clusters.tsv file prefix optional prefix prepend cell barcodes assay_name name assay object key name key use meta_data_label name column returned meta data place souporcell assignment.  check overwriting rd_label name dimensionality reduction rename_assignment rename souporcell assignment discussed description","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/add_souporcell_seurat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add souporcell clustering file output to a seurat object — add_souporcell_seurat","text":"seurat object reduced dimension assay containing SNP clusters generated souporcell modified discussed . column added meta data designated meta_data_label argument genotype assignment generated souporcell","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/augment_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Augment data — augment_data","title":"Augment data — augment_data","text":"function takes seurat object finds cells sufficiently abundant grouped column parameter, simulates data augment cell number level parameter - norm_number","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/augment_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Augment data — augment_data","text":"","code":"augment_data(obj, column, norm_number = 2000, assay = \"RNA\", prune = F)"},{"path":"https://furlan-lab.github.io/viewmastR/reference/augment_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Augment data — augment_data","text":"column column metadata designates cell group (.e. celltype) norm_number cell number augment data cells sufficiently abundant object prune downsample cells present number higher norm_number level norm_number (default = F)","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/augment_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Augment data — augment_data","text":"seurat object augmented simulated cells cell groups present level norm_number cells","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/calculate_gene_dispersion.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate dispersion genes in a cell_data_set object — calculate_gene_dispersion","title":"Calculate dispersion genes in a cell_data_set object — calculate_gene_dispersion","text":"Monocle3 aims learn cells transition biological program gene expression changes experiment. cell can viewed point high-dimensional space, dimension describes expression different gene. Identifying program gene expression changes equivalent learning trajectory cells follow space. However, dimensions analysis, harder trajectory learn. Fortunately, many genes typically co-vary one another, dimensionality data can reduced wide variety different algorithms. Monocle3 provides two different algorithms dimensionality reduction via reduce_dimensions (UMAP tSNE). function calculate_dispersion optional step trajectory building process preprocess_cds.  calculating dispersion cell_data_set using calculate_gene_dispersion function, select_genes function allows user identify set genes used downstream dimensionality reduction methods.  genes disperion mean expression can plotted using plot_gene_dispersion function. Monocle3 aims learn cells transition biological program gene expression changes experiment. cell can viewed point high-dimensional space, dimension describes expression different gene. Identifying program gene expression changes equivalent learning trajectory cells follow space. However, dimensions analysis, harder trajectory learn. Fortunately, many genes typically co-vary one another, dimensionality data can reduced wide variety different algorithms. Monocle3 provides two different algorithms dimensionality reduction via reduce_dimensions (UMAP tSNE). function calculate_dispersion optional step trajectory building process preprocess_cds.  calculating dispersion cell_data_set using calculate_gene_dispersion function, select_genes function allows user identify set genes used downstream dimensionality reduction methods.  genes disperion mean expression can plotted using plot_gene_dispersion function.","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/calculate_gene_dispersion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate dispersion genes in a cell_data_set object — calculate_gene_dispersion","text":"","code":"calculate_gene_dispersion(   cds,   q = 3,   id_tag = \"id\",   symbol_tag = \"gene_short_name\",   method = \"m3addon\",   removeOutliers = T )  calculate_gene_dispersion(   cds,   q = 3,   id_tag = \"id\",   symbol_tag = \"gene_short_name\",   method = \"m3addon\",   removeOutliers = T )"},{"path":"https://furlan-lab.github.io/viewmastR/reference/calculate_gene_dispersion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate dispersion genes in a cell_data_set object — calculate_gene_dispersion","text":"cds cell_data_set upon perform operation. q polynomial degree; default = 3. id_tag name feature data column corresponding unique id - typically ENSEMBL id; default = \"id\". symbol_tag name feature data column corresponding gene symbol; default = \"gene_short_name\".","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/calculate_gene_dispersion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate dispersion genes in a cell_data_set object — calculate_gene_dispersion","text":"updated cell_data_set object dispersion mean expression saved updated cell_data_set object dispersion mean expression saved","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/cluster_LSI.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster LSI — cluster_LSI","title":"Cluster LSI — cluster_LSI","text":"function extracts clustering last iteration LSI (see iterativeLSI) cell type differences single cell experiment.  function uses leiden clustering implemented monocle3, finds less granular clusters data using partitions (monocle3) using reduced dimension LSI input last iteration LSI used.","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/cluster_LSI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster LSI — cluster_LSI","text":"","code":"cluster_LSI(   cds,   k = 20,   weight = F,   num_iter = 1,   resolution_parameter = NULL,   random_seed = 2020,   verbose = T,   partition_q_value = 0.05 )"},{"path":"https://furlan-lab.github.io/viewmastR/reference/cluster_LSI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster LSI — cluster_LSI","text":"cds cell_data_set upon perform operation. k Nnteger number nearest neighbors use creating k nearest neighbor graph Leiden clustering. k related resolution clustering result, bigger k result lower resolution vice versa. Default 20. weight logical argument determine whether use Jaccard coefficients two nearest neighbors (based overlapping kNN) weight used Louvain clustering. Default FALSE num_iter Integer number iterations used Leiden clustering. clustering result giving largest modularity score used final clustering result. Default 1. Note num_iter greater 1, random_seed argument ignored louvain method. random_seed seed used random number generator louvain-igraph package. argument ignored num_iter larger 1. verbose logic flag determine whether print run details. binarize boolean whether binarize data prior TFIDF transformation resolution Parameter controls resolution clustering. NULL (Default), parameter determined automatically. partition_qval Numeric, q-value cutoff determine partition. Default 0.05.","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/cluster_LSI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cluster LSI — cluster_LSI","text":"Granja, J. M.et al. (2019). Single-cell multiomic analysis identifies regulatory programs mixed-phenotype acute leukemia. Nature Biotechnology, 37(12), 1458–1465. Cusanovich, D. ., Reddington, J. P., Garfield, D. ., Daza, R. M., Aghamirzaie, D., Marco-Ferreres, R., et al. (2018). cis-regulatory dynamics embryonic development single-cell resolution. Nature, 555(7697), 538–542. Vincent D. Blondel, Jean-Loup Guillaume, Renaud Lambiotte, Etienne Lefebvre: Fast unfolding communities large networks. J. Stat. Mech. (2008) P10008 V. . Traag L. Waltman N. J. van Eck: Louvain Leiden: guaranteeing well-connected communities. Scientific Reports, 9(1) (2019). doi: 10.1038/s41598-019-41695-z. Jacob H. Levine et. al. Data-Driven Phenotypic Dissection AML Reveals Progenitor-like Cells Correlate Prognosis. Cell, 2015.","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/common_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Finds common features in a list of single cell objects — common_features","title":"Finds common features in a list of single cell objects — common_features","text":"Machine learning algorithms often require features across datasets.  function finds common features list cell data set objects (monocle3) returns list cds's features.  Note function uses rownames 'fData' DataFrame (monocle3) rownames seurat_object find intersect features common objects Machine learning algorithms often require features across datasets.  function finds common features list cell data set objects (monocle3) returns list cds's features.  Note function uses rownames 'fData' DataFrame (monocle3) rownames seurat_object find intersect features common objects","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/common_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finds common features in a list of single cell objects — common_features","text":"","code":"common_features(cds_list)  common_features(cds_list)"},{"path":"https://furlan-lab.github.io/viewmastR/reference/common_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finds common features in a list of single cell objects — common_features","text":"cds_list Input  object.","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/common_variant_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Common Variant Genes — common_variant_genes","title":"Common Variant Genes — common_variant_genes","text":"Find common variant genes two cds objects","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/common_variant_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Common Variant Genes — common_variant_genes","text":"","code":"common_variant_genes(   cds1,   cds2,   top_n = 2000,   logmean_ul = 2,   logmean_ll = -6,   row_data_column = \"gene_short_name\",   unique_data_column = \"id\",   verbose = T,   plot = F )"},{"path":"https://furlan-lab.github.io/viewmastR/reference/common_variant_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Common Variant Genes — common_variant_genes","text":"cds1 cds cds2","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/common_variant_genes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Common Variant Genes — common_variant_genes","text":"vector similarly variant genes","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/computeSparseRowVariances.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute sparse row variance — computeSparseRowVariances","title":"Compute sparse row variance — computeSparseRowVariances","text":"Compute sparse row variance","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/computeSparseRowVariances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute sparse row variance — computeSparseRowVariances","text":"","code":"computeSparseRowVariances(j, val, rm, n)"},{"path":"https://furlan-lab.github.io/viewmastR/reference/confusion_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Confusion matrix — confusion_matrix","title":"Confusion matrix — confusion_matrix","text":"function generate confusion matrix two factors; pred (short prediction) gt (short ground truth).  One may optionally supply named vector colors annotate row column legends.","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/confusion_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confusion matrix — confusion_matrix","text":"","code":"confusion_matrix(pred, gt, cols = NULL)"},{"path":"https://furlan-lab.github.io/viewmastR/reference/confusion_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confusion matrix — confusion_matrix","text":"pred factor predictions gt factor ground truth cols named vector colors","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/confusion_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confusion matrix — confusion_matrix","text":"confusion matrix plot","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/detect_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Detects genes above minimum threshold. — detect_genes","title":"Detects genes above minimum threshold. — detect_genes","text":"gene cell_data_set object, detect_genes counts many cells expressed minimum threshold. addition, cell, detect_genes counts number genes threshold detectable. Results added columns num_cells_expressed num_genes_expressed rowData colData tables respectively.","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/detect_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detects genes above minimum threshold. — detect_genes","text":"","code":"detect_genes(cds, min_expr = 0, exprs_bin = TRUE, exprs_cuts = 25)"},{"path":"https://furlan-lab.github.io/viewmastR/reference/detect_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detects genes above minimum threshold. — detect_genes","text":"cds Input cell_data_set object. min_expr Numeric indicating expression threshold exprs_bin Boolean whether bin genes mean expression exprs_cuts Numeic indicating number bins using exprs_bin","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/detect_genes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detects genes above minimum threshold. — detect_genes","text":"Updated cell_data_set object","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/find_partitions.html","id":null,"dir":"Reference","previous_headings":"","what":"Finds partitions akin to Monocle3 FindPartition Function but for a Seurat object — find_partitions","title":"Finds partitions akin to Monocle3 FindPartition Function but for a Seurat object — find_partitions","text":"Stated differently, low cluster resolution","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/find_partitions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finds partitions akin to Monocle3 FindPartition Function but for a Seurat object — find_partitions","text":"","code":"find_partitions(   obj,   method = \"louvain\",   k = 20,   reduction = \"umap\",   dims = NULL,   weight = F,   num_iter = 1,   resolution_parameter = NULL,   random_seed = 2020,   verbose = T,   partition_q_value = 0.05 )"},{"path":"https://furlan-lab.github.io/viewmastR/reference/find_partitions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finds partitions akin to Monocle3 FindPartition Function but for a Seurat object — find_partitions","text":"obj Input seurat object. method Louvain Leiden k nearest number k reduction reduction find partitions dims number dimensions num_iter Number iterations (leiden ); Default 1. resolution_parameter leiden random_seed seed default 2020 verbose Default True partition_q_value Louvain - sets resolution","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/groupSums.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for summing sparse matrix groups — groupSums","title":"Helper function for summing sparse matrix groups — groupSums","text":"Helper function summing sparse matrix groups","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/groupSums.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for summing sparse matrix groups — groupSums","text":"","code":"groupSums(mat, groups = NULL, na.rm = TRUE, sparse = FALSE)"},{"path":"https://furlan-lab.github.io/viewmastR/reference/groupSums.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Helper function for summing sparse matrix groups — groupSums","text":"Granja, J. M.et al. (2019). Single-cell multiomic analysis identifies regulatory programs mixed-phenotype acute leukemia. Nature Biotechnology, 37(12), 1458–1465.","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/infer_from_model.html","id":null,"dir":"Reference","previous_headings":"","what":"infer from saved model — infer_from_model","title":"infer from saved model — infer_from_model","text":"infer saved model","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/infer_from_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"infer from saved model — infer_from_model","text":"","code":"infer_from_model(model_path, query, num_classes, num_features, verbose)"},{"path":"https://furlan-lab.github.io/viewmastR/reference/iterative_LSI.html","id":null,"dir":"Reference","previous_headings":"","what":"Iterative LSI — iterative_LSI","title":"Iterative LSI — iterative_LSI","text":"function aims minimize batch effects accentuate cell type differences single cell experiment.  function implemented using Monocle3 takes inspiration Granja et. al. reference cited took inspiration fly ATAC paper. heart function iterates three main steps: 1) Using TFIDF transformation SVD normalize data 2) Clustering normalized data using leiden clustering high dimensional space 3) identifying features -represented resulting clusters using simple counting method.  three steps repeated using features identified step 3 subset normalization matrix step 1 repeating process.  TFIDF transformation supplied package.  SVD performed using irilba package.  Leiden clustering performed using monocle3 implementation finally counting per cluster performed using edgeR cpm function.  function takes input cell_data_set iterate n number iterations.  output function appropriately input dimensionality reduction methods UMAP tSNE.  number iterations set number resolution parameters specified.","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/iterative_LSI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Iterative LSI — iterative_LSI","text":"","code":"iterative_LSI(   cds,   num_dim = 25,   starting_features = NULL,   resolution = c(1e-04, 3e-04, 5e-04),   do_tf_idf = T,   num_features = c(3000, 3000, 3000),   exclude_features = NULL,   binarize = FALSE,   scale = T,   log_transform = T,   LSI_method = 1,   partition_qval = 0.05,   nn_control = list(method = \"nn2\"),   seed = 2020,   scale_to = 10000,   leiden_k = 20,   leiden_weight = FALSE,   leiden_iter = 1,   verbose = F,   return_iterations = F,   ... )"},{"path":"https://furlan-lab.github.io/viewmastR/reference/iterative_LSI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Iterative LSI — iterative_LSI","text":"cds cell_data_set upon perform operation. num_dim Numeric indicating number prinicipal components downstream ordering.  Default value NULL result use PCs resolution vector resolution values leiden clustering num_features number features use dimensionality reduction (default 3000).  use different numbers features different iterations, supply vector length resolution vector. exclude_features character vector features (rownames assay(cds)) binarize boolean whether binarize data prior TFIDF transformation seed numeric seed scale_to numeric value scale data return_iterations boolean whether return iterations; funciton output list contianing final cds SVD matrices, clusters features used iteration","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/iterative_LSI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Iterative LSI — iterative_LSI","text":"updated cell_data_set object reduced dimension LSI object clusters object","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/iterative_LSI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Iterative LSI — iterative_LSI","text":"Granja, J. M.et al. (2019). Single-cell multiomic analysis identifies regulatory programs mixed-phenotype acute leukemia. Nature Biotechnology, 37(12), 1458–1465. UMAP: McInnes, L, Healy, J, UMAP: Uniform Manifold Approximation Projection Dimension Reduction, ArXiv e-prints 1802.03426, 2018 tSNE: Laurens van der Maaten Geoffrey Hinton. Visualizing data using t-SNE. J. Mach. Learn. Res., 9(Nov):2579– 2605, 2008. Cusanovich, D. ., Reddington, J. P., Garfield, D. ., Daza, R. M., Aghamirzaie, D., Marco-Ferreres, R., et al. (2018). cis-regulatory dynamics embryonic development single-cell resolution. Nature, 555(7697), 538–542.","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/monocle3_to_seurat.html","id":null,"dir":"Reference","previous_headings":"","what":"Monocle3 to Seurat — monocle3_to_seurat","title":"Monocle3 to Seurat — monocle3_to_seurat","text":"Conver Monocle3 cell data set Seurat object.  variety reasons, recommendations use funciont generate skeleton Seurat objects can used plotting much else.  resulting object contain PCA reducitons nearest neighbor graphs.","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/monocle3_to_seurat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monocle3 to Seurat — monocle3_to_seurat","text":"","code":"monocle3_to_seurat(   cds,   seu_rd = \"umap\",   mon_rd = \"UMAP\",   assay_name = \"RNA\",   row.names = \"gene_short_name\",   normalize = T,   duplicate_rownames = c(\"rename\", \"remove\") )"},{"path":"https://furlan-lab.github.io/viewmastR/reference/monocle3_to_seurat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monocle3 to Seurat — monocle3_to_seurat","text":"seu_rd Reduced dimname seurat ('.e. UMAP') mon_rd Reduced dimname monocle3 ('.e. UMAP') assay_name Name data slot ('.e. RNA') row.names rowData column use rownames Seurat object seu Seurat Object duplicate_rownnames handle duplicate rownames","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/monocle3_to_seurat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monocle3 to Seurat — monocle3_to_seurat","text":"cell_data_set object","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/plot_training_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Training data plot — plot_training_data","title":"Training data plot — plot_training_data","text":"function display plot data generated viewmastR training","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/plot_training_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Training data plot — plot_training_data","text":"","code":"plot_training_data(output_list)"},{"path":"https://furlan-lab.github.io/viewmastR/reference/plot_training_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Training data plot — plot_training_data","text":"output_list list returned running viewmastR using return_type = \"list\" parameter.","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/plot_training_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Training data plot — plot_training_data","text":"plot training data","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/process_learning_obj_ann.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Robj learning objects for ANN — process_learning_obj_ann","title":"Process Robj learning objects for ANN — process_learning_obj_ann","text":"Process Robj learning objects ANN","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/process_learning_obj_ann.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Robj learning objects for ANN — process_learning_obj_ann","text":"","code":"process_learning_obj_ann(   train,   test,   query,   labels,   hidden_size,   learning_rate,   num_epochs,   directory,   verbose,   backend )"},{"path":"https://furlan-lab.github.io/viewmastR/reference/process_learning_obj_mlr.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Robj learning objects for MLR — process_learning_obj_mlr","title":"Process Robj learning objects for MLR — process_learning_obj_mlr","text":"Process Robj learning objects MLR","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/process_learning_obj_mlr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Robj learning objects for MLR — process_learning_obj_mlr","text":"","code":"process_learning_obj_mlr(   train,   test,   query,   labels,   learning_rate,   num_epochs,   directory,   verbose,   backend )"},{"path":"https://furlan-lab.github.io/viewmastR/reference/readR.html","id":null,"dir":"Reference","previous_headings":"","what":"Read an R object — readR","title":"Read an R object — readR","text":"Read R object","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/readR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read an R object — readR","text":"","code":"readR(obj)"},{"path":"https://furlan-lab.github.io/viewmastR/reference/run_mnist.html","id":null,"dir":"Reference","previous_headings":"","what":"Run full mnist training in R; for Rstudio — run_mnist","title":"Run full mnist training in R; for Rstudio — run_mnist","text":"Run full mnist training R; Rstudio","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/run_mnist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run full mnist training in R; for Rstudio — run_mnist","text":"","code":"run_mnist()"},{"path":"https://furlan-lab.github.io/viewmastR/reference/run_mnist_ann.html","id":null,"dir":"Reference","previous_headings":"","what":"Run full mnist training in R; for Rstudio — run_mnist_ann","title":"Run full mnist training in R; for Rstudio — run_mnist_ann","text":"Run full mnist training R; Rstudio","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/run_mnist_ann.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run full mnist training in R; for Rstudio — run_mnist_ann","text":"","code":"run_mnist_ann()"},{"path":"https://furlan-lab.github.io/viewmastR/reference/run_mnist_terminal.html","id":null,"dir":"Reference","previous_headings":"","what":"Run full mnist training in R — run_mnist_terminal","title":"Run full mnist training in R — run_mnist_terminal","text":"Run full mnist training R","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/run_mnist_terminal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run full mnist training in R — run_mnist_terminal","text":"","code":"run_mnist_terminal()"},{"path":"https://furlan-lab.github.io/viewmastR/reference/select_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Select genes in a cell_data_set for dimensionality reduction — select_genes","title":"Select genes in a cell_data_set for dimensionality reduction — select_genes","text":"Monocle3 aims learn cells transition biological program gene expression changes experiment. cell can viewed point high-dimensional space, dimension describes expression different gene. Identifying program gene expression changes equivalent learning trajectory cells follow space. However, dimensions analysis, harder trajectory learn. Fortunately, many genes typically co-vary one another, dimensionality data can reduced wide variety different algorithms. Monocle3 provides two different algorithms dimensionality reduction via reduce_dimensions (UMAP tSNE). function select_features optional step trajectory building process preprocess_cds.  calculating dispersion cell_data_set using calculate_gene_dispersion function, select_genes function allows user identify set genes used downstream dimensionality reduction methods.","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/select_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select genes in a cell_data_set for dimensionality reduction — select_genes","text":"","code":"select_genes(   cds,   fit_min = 1,   fit_max = Inf,   logmean_ul = Inf,   logmean_ll = -Inf,   top_n = NULL )"},{"path":"https://furlan-lab.github.io/viewmastR/reference/select_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select genes in a cell_data_set for dimensionality reduction — select_genes","text":"cds cell_data_set upon perform operation. fit_min minimum multiple dispersion fit calculation; default = 1 fit_max maximum multiple dispersion fit calculation; default = Inf logmean_ul maximum multiple dispersion fit calculation; default = Inf logmean_ll maximum multiple dispersion fit calculation; default = Inf top top_n specified, override fit_min fit_max select top n variant features.  logmena_ul logmean_ll can still used.","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/select_genes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select genes in a cell_data_set for dimensionality reduction — select_genes","text":"updated cell_data_set object selected features","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/setup_training.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup training datasets — setup_training","title":"Setup training datasets — setup_training","text":"see viewmastR","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/setup_training.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup training datasets — setup_training","text":"","code":"setup_training(   query_cds,   ref_cds,   ref_celldata_col,   norm_method = c(\"log\", \"binary\", \"size_only\", \"none\"),   selected_genes = NULL,   train_frac = 0.8,   tf_idf = F,   scale = F,   LSImethod = 1,   verbose = T,   addbias = F,   use_sparse = F,   return_type = c(\"list\", \"matrix\", \"S4obj\"),   ... )"},{"path":"https://furlan-lab.github.io/viewmastR/reference/setup_training.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup training datasets — setup_training","text":"query_cds cds query ref_cds reference cds","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/setup_training.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup training datasets — setup_training","text":"various forms training test data query","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/seurat_to_monocle3.html","id":null,"dir":"Reference","previous_headings":"","what":"Seurat to Monocle3 — seurat_to_monocle3","title":"Seurat to Monocle3 — seurat_to_monocle3","text":"Conver Seurat Monocle3","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/seurat_to_monocle3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Seurat to Monocle3 — seurat_to_monocle3","text":"","code":"seurat_to_monocle3(seu, seu_rd = \"umap\", mon_rd = \"UMAP\", assay_name = \"RNA\")"},{"path":"https://furlan-lab.github.io/viewmastR/reference/seurat_to_monocle3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Seurat to Monocle3 — seurat_to_monocle3","text":"seu Seurat Object seu_rd Reduced dimname seurat ('.e. UMAP'); use NULLto copy dimensionality reduction mon_rd Reduced dimname monocle3 ('.e. UMAP'); use NULL copy dimensionality reduction assay_name Name data slot ('.e. RNA')","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/seurat_to_monocle3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Seurat to Monocle3 — seurat_to_monocle3","text":"cell_data_set object","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/sfc.html","id":null,"dir":"Reference","previous_headings":"","what":"Make colors — sfc","title":"Make colors — sfc","text":"function creates color palatte","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/sfc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make colors — sfc","text":"","code":"sfc(n, scramble = F)"},{"path":"https://furlan-lab.github.io/viewmastR/reference/sfc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make colors — sfc","text":"n number colors scramble whether jumble colors","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/sparseRowVariances.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for summing sparse matrix groups — sparseRowVariances","title":"Helper function for summing sparse matrix groups — sparseRowVariances","text":"Helper function summing sparse matrix groups Helper function summing sparse matrix groups","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/sparseRowVariances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for summing sparse matrix groups — sparseRowVariances","text":"","code":"sparseRowVariances(m)  sparseRowVariances(m)"},{"path":"https://furlan-lab.github.io/viewmastR/reference/sparseRowVariances.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Helper function for summing sparse matrix groups — sparseRowVariances","text":"Granja, J. M.et al. (2019). Single-cell multiomic analysis identifies regulatory programs mixed-phenotype acute leukemia. Nature Biotechnology, 37(12), 1458–1465. Granja, J. M.et al. (2019). Single-cell multiomic analysis identifies regulatory programs mixed-phenotype acute leukemia. Nature Biotechnology, 37(12), 1458–1465.","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/splat_bulk_reference.html","id":null,"dir":"Reference","previous_headings":"","what":"Bulk reference — splat_bulk_reference","title":"Bulk reference — splat_bulk_reference","text":"function creates seurat object (typically single cell genomics) multiple single cell profiles sample bulk object (SummarizedExperiment object currently supported).  , function creates single cell profiles size distribution approximates provided single cell object (query)","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/splat_bulk_reference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bulk reference — splat_bulk_reference","text":"","code":"splat_bulk_reference(   query = NULL,   ref,   N = 2,   assay = \"RNA\",   bulk_feature_row = \"gene_short_name\",   bulk_assay_name = \"counts\",   dist = c(\"sc-direct\", \"sc-mimic\", \"bulk\") )"},{"path":"https://furlan-lab.github.io/viewmastR/reference/splat_bulk_reference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bulk reference — splat_bulk_reference","text":"query single cell object (Seurat) size distribution counts mimicked assay argument ref reference object (Summarized Experiment) assay assay slot query (Seurat) bulk_feature_row column name gene symbols ref bulk_assay_name name assay object ref dist DEVELOPMENT","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/splat_bulk_reference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bulk reference — splat_bulk_reference","text":"classified seurat object labeled according bulk reference","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/test_backend.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Robj learning objects for ANN — test_backend","title":"Process Robj learning objects for ANN — test_backend","text":"Process Robj learning objects ANN","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/test_backend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Robj learning objects for ANN — test_backend","text":"","code":"test_backend()"},{"path":"https://furlan-lab.github.io/viewmastR/reference/tf_idf_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs TF-IDF transformation on a cell_data_set — tf_idf_transform","title":"Performs TF-IDF transformation on a cell_data_set — tf_idf_transform","text":"Just like sounds.","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/tf_idf_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs TF-IDF transformation on a cell_data_set — tf_idf_transform","text":"","code":"tf_idf_transform(input, method = 1, verbose = T)"},{"path":"https://furlan-lab.github.io/viewmastR/reference/tf_idf_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs TF-IDF transformation on a cell_data_set — tf_idf_transform","text":"cds_list Input cell_data_set object sparse matrix.","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/tf_idf_transform_v2.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs TF-IDF transformation on a cell_data_set v2 — tf_idf_transform_v2","title":"Performs TF-IDF transformation on a cell_data_set v2 — tf_idf_transform_v2","text":"Just like sounds different.","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/tf_idf_transform_v2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs TF-IDF transformation on a cell_data_set v2 — tf_idf_transform_v2","text":"","code":"tf_idf_transform_v2(input)"},{"path":"https://furlan-lab.github.io/viewmastR/reference/tf_idf_transform_v2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs TF-IDF transformation on a cell_data_set v2 — tf_idf_transform_v2","text":"cds_list Input cell_data_set object sparse matrix.","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/viewmastR.html","id":null,"dir":"Reference","previous_headings":"","what":"Running viewmastR using the new Rust implementation — viewmastR","title":"Running viewmastR using the new Rust implementation — viewmastR","text":"see viewmastR","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/viewmastR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Running viewmastR using the new Rust implementation — viewmastR","text":"","code":"viewmastR(   query_cds,   ref_cds,   ref_celldata_col,   query_celldata_col = NULL,   FUNC = c(\"softmax_regression\"),   norm_method = c(\"log\", \"binary\", \"size_only\", \"none\"),   selected_genes = NULL,   train_frac = 0.8,   tf_idf = F,   scale = F,   hidden_layers = c(500, 100),   learning_rate = 0.001,   batch_size = 100,   max_epochs = 10,   max_error = 0.5,   lambda = 1,   iterations = 1000,   LSImethod = 1,   verbose = T,   device = 0,   threshold = NULL,   keras_model = NULL,   dir = \"/tmp/sc_local\",   return_type = c(\"object\", \"list\"),   ... )"},{"path":"https://furlan-lab.github.io/viewmastR/reference/viewmastR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Running viewmastR using the new Rust implementation — viewmastR","text":"query_cds cds query ref_cds reference cds","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/viewmastR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Running viewmastR using the new Rust implementation — viewmastR","text":"various forms training test data query","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/viewmastR_infer.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to infer cell labels using a trained model — viewmastR_infer","title":"Function to infer cell labels using a trained model — viewmastR_infer","text":"function infers cell labels using trained model updates input dataset inferred labels.","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/viewmastR_infer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to infer cell labels using a trained model — viewmastR_infer","text":"","code":"viewmastR_infer(   query_cds,   model_path,   vg,   query_celldata_col = \"viewmastR_inferred\",   labels = NULL,   verbose = T,   return_probs = F )"},{"path":"https://furlan-lab.github.io/viewmastR/reference/viewmastR_infer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to infer cell labels using a trained model — viewmastR_infer","text":"query_cds Seurat cell_data_set object - dataset cell labels inferred. model_path character path trained model file. vg character vector - Features used inference (must used model creation). query_celldata_col character vector - names column store inferred cell labels query dataset. Default \"viewmastR_inferred\". labels character vector - optional labels corresponding class indices. Default NULL. verbose bool - show messaging return_probs logical TRUE, returns class probabilities. Default FALSE.","code":""},{"path":"https://furlan-lab.github.io/viewmastR/reference/viewmastR_infer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to infer cell labels using a trained model — viewmastR_infer","text":"return_probs TRUE, returns data frame containing class probabilities. return_probs FALSE, updates query_cds object inferred cell labels returns .","code":""},{"path":[]},{"path":"https://furlan-lab.github.io/viewmastR/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"New features","title":"viewmastR v0.2.0","text":"use saved models","code":""},{"path":[]},{"path":"https://furlan-lab.github.io/viewmastR/news/index.html","id":"new-features-0-1-5","dir":"Changelog","previous_headings":"","what":"New features","title":"viewmastR v0.1.5","text":"splat_bulk_reference (released viewmastRust)","code":""},{"path":[]},{"path":"https://furlan-lab.github.io/viewmastR/news/index.html","id":"new-features-0-1-4","dir":"Changelog","previous_headings":"","what":"New features","title":"viewmastR v0.1.4","text":"sfc color function (released viewmastRust)","code":""},{"path":"https://furlan-lab.github.io/viewmastR/news/index.html","id":"minor-bug-fixes-and-improvements-0-1-4","dir":"Changelog","previous_headings":"","what":"Minor bug fixes and improvements","title":"viewmastR v0.1.4","text":"many (released viewmastRust)","code":""},{"path":[]},{"path":"https://furlan-lab.github.io/viewmastR/news/index.html","id":"new-features-0-1-2","dir":"Changelog","previous_headings":"","what":"New features","title":"viewmastR v0.1.2","text":"augment function (released viewmastRust)","code":""},{"path":"https://furlan-lab.github.io/viewmastR/news/index.html","id":"minor-bug-fixes-and-improvements-0-1-2","dir":"Changelog","previous_headings":"","what":"Minor bug fixes and improvements","title":"viewmastR v0.1.2","text":"many (released viewmastRust)","code":""},{"path":"https://furlan-lab.github.io/viewmastR/news/index.html","id":"viewmastr-v010","dir":"Changelog","previous_headings":"","what":"viewmastR v0.1.0","title":"viewmastR v0.1.0","text":"first stable version (released viewmastRust)","code":""}]
